import random

def sqrt(num):

    return int(num ** 0.5)


def losing(num):

    if not hasattr(losing, 'memo'):
        losing.memo = {0: False}
    if num in losing.memo:
        return losing.memo[num]
    else:
        all_moves = [num - i**2 for i in range(1, sqrt(num)+1)]
        losing.memo[num] = filter(lambda x: losing(x), all_moves) != []
    return losing.memo[num]


def find_winning(num):
    return filter(lambda x: not losing(x), [num-i*i for i in range(sqrt(num)+1)])


def declare_number():
    print "The number is ", initial


initial = 12#random.randint(5,10)
count = 10
while count < initial:
    losing(count)
    count += 10

player_first = raw_input("Wanna go first? ")
declare_number()
if not player_first:
    small_win = initial - find_winning(initial) [-1]
    small_win = small_win if small_win else 1
    print "Subtracting ",sqrt(small_win),"^2 =", small_win
    initial -= small_win
    declare_number()

while initial > 0:
    number = int(raw_input("Enter the square you want to subtract. "))
    while number ** 2 > initial:
        print "Too big,"
        number = int(raw_input("Enter the square you want to subtract. "))
    if number < 1:
        number = 1
    print "Subtracting ", number, "^2 =", number ** 2
    initial -= number ** 2
    if not initial:
        player_won = True
        break
    declare_number()
    small_win = initial - find_winning(initial)[-1]
    small_win = small_win if small_win else 1
    print "Subtracting ", sqrt(small_win), "^2 =", small_win
    initial -= small_win
    declare_number()
    if not initial:
        player_won = False

if player_won:
    print "Congratulations! You won!"
else:
    print "Better luck next time!"
